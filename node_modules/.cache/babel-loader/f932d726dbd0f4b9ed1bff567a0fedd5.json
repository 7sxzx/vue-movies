{"remainingRequest":"/Users/David/_Proyectos/_GIT/vue-movies/node_modules/babel-loader/lib/index.js!/Users/David/_Proyectos/_GIT/vue-movies/node_modules/eslint-loader/index.js??ref--13-0!/Users/David/_Proyectos/_GIT/vue-movies/src/store.js","dependencies":[{"path":"/Users/David/_Proyectos/_GIT/vue-movies/src/store.js","mtime":1570987015000},{"path":"/Users/David/_Proyectos/_GIT/vue-movies/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/David/_Proyectos/_GIT/vue-movies/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/David/_Proyectos/_GIT/vue-movies/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _slicedToArray from \"/Users/David/_Proyectos/_GIT/vue-movies/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/David/_Proyectos/_GIT/vue-movies/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport AppServices from '@/services/AppServices';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    baseUrl: '',\n    itemInfo: {}\n  },\n  getters: {\n    imgPath: function imgPath(state) {\n      return \"\".concat(state.baseUrl, \"w370_and_h556_bestv2\");\n    } //backgroundPath: state => `${state.baseUrl}w1400_and_h450_face`\n\n  },\n  mutations: {\n    LOAD_CONF: function LOAD_CONF(state, baseUrl) {\n      state.baseUrl = baseUrl;\n    },\n    RESET_ITEM: function RESET_ITEM(state) {\n      Vue.set(state, 'itemInfo', {});\n    },\n    LOAD_ITEM: function LOAD_ITEM(state, _ref) {\n      var type = _ref.type,\n          info = _ref.info,\n          cast = _ref.cast;\n      var itemInfo = {\n        type: type,\n        title: type == 'movie' ? info.title : info.name,\n        year: type == 'movie' ? info.release_date : info.first_air_date,\n        overview: info.overview,\n        homepage: info.homepage,\n        genres: info.genres,\n        poster_path: info.poster_path,\n        backdrop_path: info.backdrop_path,\n        vote_average: info.vote_average,\n        cast: cast.map(function (item) {\n          return item.name;\n        }).slice(0, 6).join(', ')\n      };\n      Vue.set(state, 'itemInfo', itemInfo);\n    }\n  },\n  actions: {\n    getInitialData: function () {\n      var _getInitialData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref2) {\n        var commit, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context.next = 3;\n                return AppServices.getConfiguration();\n\n              case 3:\n                response = _context.sent;\n                commit('LOAD_CONF', response.data.images.secure_base_url);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialData(_x) {\n        return _getInitialData.apply(this, arguments);\n      }\n\n      return getInitialData;\n    }(),\n    getItem: function () {\n      var _getItem = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref3, _ref4) {\n        var commit, id, type, _ref5, _ref6, response, responseCast;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref3.commit;\n                id = _ref4.id, type = _ref4.type;\n                commit('RESET_ITEM');\n                _context2.next = 5;\n                return Promise.all([AppServices.getItemInfo(id, type), AppServices.getCast(id, type)]);\n\n              case 5:\n                _ref5 = _context2.sent;\n                _ref6 = _slicedToArray(_ref5, 2);\n                response = _ref6[0];\n                responseCast = _ref6[1];\n                commit('LOAD_ITEM', {\n                  type: type,\n                  info: response.data,\n                  cast: responseCast.data.cast\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getItem(_x2, _x3) {\n        return _getItem.apply(this, arguments);\n      }\n\n      return getItem;\n    }()\n  }\n});",{"version":3,"sources":["/Users/David/_Proyectos/_GIT/vue-movies/src/store.js"],"names":["Vue","Vuex","AppServices","use","Store","state","baseUrl","itemInfo","getters","imgPath","mutations","LOAD_CONF","RESET_ITEM","set","LOAD_ITEM","type","info","cast","title","name","year","release_date","first_air_date","overview","homepage","genres","poster_path","backdrop_path","vote_average","map","item","slice","join","actions","getInitialData","commit","getConfiguration","response","data","images","secure_base_url","getItem","id","Promise","all","getItemInfo","getCast","responseCast"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport AppServices from '@/services/AppServices';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    baseUrl: '',\n    itemInfo: {}\n  },\n  getters: {\n    imgPath: state => `${state.baseUrl}w370_and_h556_bestv2`\n    //backgroundPath: state => `${state.baseUrl}w1400_and_h450_face`\n  },\n\n  mutations: {\n    LOAD_CONF: (state, baseUrl) => {\n      state.baseUrl = baseUrl;\n    },\n    RESET_ITEM: state => {\n      Vue.set(state, 'itemInfo', {});\n    },\n    LOAD_ITEM: (state, { type, info, cast }) => {\n      const itemInfo = {\n        type,\n        title: type == 'movie' ? info.title : info.name,\n        year: type == 'movie' ? info.release_date : info.first_air_date,\n        overview: info.overview,\n        homepage: info.homepage,\n        genres: info.genres,\n        poster_path: info.poster_path,\n        backdrop_path: info.backdrop_path,\n        vote_average: info.vote_average,\n        cast: cast\n          .map(item => item.name)\n          .slice(0, 6)\n          .join(', ')\n      };\n      Vue.set(state, 'itemInfo', itemInfo);\n    }\n  },\n\n  actions: {\n    getInitialData: async ({ commit }) => {\n      const response = await AppServices.getConfiguration();\n      commit('LOAD_CONF', response.data.images.secure_base_url);\n    },\n    getItem: async ({ commit }, { id, type }) => {\n      commit('RESET_ITEM');\n      const [response, responseCast] = await Promise.all([\n        AppServices.getItemInfo(id, type),\n        AppServices.getCast(id, type)\n      ]);\n\n      commit('LOAD_ITEM', {\n        type,\n        info: response.data,\n        cast: responseCast.data.cast\n      });\n    }\n  }\n});\n"]}]}